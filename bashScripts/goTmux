
#!/usr/bin/env bash

PERSONAL="~"
DIPPER="~/dipper"
ROBOTIX="~/robotix"
PEER_COLLECTIVE="~/peercollective"

createWindow() {
    session=$1
    window=$2
    workingDirectory=$3
    command=$4
    shift
    shift
    hasWindow=$(tmux list-windows -t $session | grep "$window")
    if [ -z "$hasWindow" ]; then
        cmd="tmux neww -t $session: -n $window -d"
        if [ $# -gt 0 ]; then
            cmd="$cmd -c $workingDirectory"
        fi
        echo "Creating Window(\"$hasWindow\"): $cmd"
        eval $cmd
        if [ ! -z "$command" ]; then
          eval "tmux send-keys -t $session:$window \"$command\" C-m"
        fi
    fi
}

createSession() {
    session=$1
    window=$2
    workingDirectory=$3
    command=$4
    shift
    shift
    cmd="tmux new -s $session -d -n $window -c $workingDirectory > /dev/null 2>&1"

    echo "Creating Session: $cmd"
    eval $cmd
    if [ ! -z "$command" ]; then
      eval "tmux send-keys -t $session:$window $command C-m"
    fi
}

while [ "$#" -gt 0 ]; do
    curr=$1
    shift

    case "$curr" in
    "-peer-app")
        createSession peer-app nvim $PEER_COLLECTIVE/app/master  
        createWindow peer-app run $PEER_COLLECTIVE/app/master "npm start"
        ;;
    "-peer-api")
        createSession peer-api nvim  $PEER_COLLECTIVE/api/develop 
        createWindow peer-api run $PEER_COLLECTIVE/api/develop "docker-compose -f docker/docker-compose.yml up --build"
        ;;
    "-peer-www")
        createSession peer-www nvim $PEER_COLLECTIVE/www/master 
        createWindow peer-www run $PEER_COLLECTIVE/www/master "npm start"
        ;;
    "-peer-admin")
        createSession peer-admin nvim $PEER_COLLECTIVE/admin/master 
        createWindow peer-admin run $PEER_COLLECTIVE/admin/master "docker-compose -f docker/docker-compose.yaml up --build"
        ;;
    "-robotix")
        createSession robotix app  $ROBOTIX/app
        createWindow robotix admin  $ROBOTIX/admin
        createWindow robotix api  $ROBOTIX/api
        createWindow robotix run-app  $ROBOTIX/app "npm start"
        createWindow robotix run-admin  $ROBOTIX/admin "npm start"
        createWindow robotix run-api  $ROBOTIX/api "npm run start:dev"
        ;;
    "-personal")
        createSession personal console 
        ;;
    *) echo "Unavailable command... $curr"
    esac
done
