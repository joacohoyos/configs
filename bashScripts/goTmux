
#!/usr/bin/env bash

PROYECTOS="~/Documents/Proyectos"

createWindow() {
    session=$1
    window=$2
    workingDirectory=$3
    command=$4
    shift
    shift
    hasWindow=$(tmux list-windows -t $session | grep "$window")
    if [ -z "$hasWindow" ]; then
        cmd="tmux neww -t $session: -n $window -d"
        if [ $# -gt 0 ]; then
            cmd="$cmd -c $workingDirectory"
        fi
        echo "Creating Window(\"$hasWindow\"): $cmd"
        eval $cmd
        if [ ! -z "$command" ]; then
          eval "tmux send-keys -t $session:$window \"$command\" C-m"
        fi
    fi
}

createSession() {
    session=$1
    window=$2
    workingDirectory=$3
    command=$4

    shift
    shift
    cmd="tmux new -s $session -d -n $window -c $workingDirectory > /dev/null 2>&1"

    echo "Creating Session: $cmd"
    eval $cmd
    if [ ! -z "$command" ]; then
      eval "tmux send-keys -t $session:$window $command C-m"
    fi
}

while [ "$#" -gt 0 ]; do
    curr=$1
    shift

    case "$curr" in
    "-jpg")
        createSession jpg nvim-server $PROYECTOS/jpg/server
        createWindow jpg nvim-frontend $PROYECTOS/jpg/wagmi
        createWindow jpg run-server $PROYECTOS/jpg/server "docker compose up node-server"
        createWindow jpg run-frontend $PROYECTOS/jpg/wagmi "npm run dev"
        ;;
    "-jpg-minting")
        createSession jpg-minting nvim-server $PROYECTOS/jpg/minting 
        createWindow jpg-minting run-server $PROYECTOS/jpg/minting "docker compose up server"
        ;;
    "-jtx")
        createSession jtx nvim $PROYECTOS/jpg/jpg-tx
        ;;
    "-gypsy")
        createSession gypsy nvim $PROYECTOS/jpg/gypsy
        ;;
    "-personal")
        createSession personal console $PROYECTOS/personal
        ;;
    "-snekbot")
        createSession snekbot nvim $PROYECTOS/personal/bot
        createWindow snekbot run $PROYECTOS/personal/bot "docker compose up server"
        createWindow snekbot ngrok $PROYECTOS/personal/bot "ngrok http 8090"
        ;;
    "-trep")
        createSession trep nvim $PROYECTOS/security-bot/trading-rep
        createWindow trep run $PROYECTOS/security-bot/trading-rep "docker compose up server"
        ;;
    "-sbot")
        createSession sbot nvim $PROYECTOS/security-bot/SecurityBot
        createWindow sbot run $PROYECTOS/security-bot/SecurityBot "./gradlew build && java -jar ./app/build/libs/SecurityBot.jar"
        createWindow sbot redis $PROYECTOS/security-bot/SecurityBot "redis-server"
        createWindow sbot cloudsql $PROYECTOS/security-bot/SecurityBot "cloud_sql_proxy -instances=marine-aria-384916:us-central1:main-db=tcp:5432"
        ;;
    *) echo "Unavailable command... $curr"
    esac
done
